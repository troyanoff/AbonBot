from dataclasses import dataclass

from core.items.menus import menu_ru, menu_en, menu_start_ru, menu_start_en


@dataclass
class TermCategoryRU:
    deadlock: str = (
        '–í–∞—à–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –±—ã–ª–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ üòî'
    )
    start_unknow: str = (
        '–ü—Ä–∏–≤–µ—Ç üèÜ'
        '\n\n'
        '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —É–¥–æ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É.'
        '\n\n'
        '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è üìù'
        '–û—Ç–∫—Ä–æ–π—Ç–µ <b>–º–µ–Ω—é</b> –∏ –≤—ã–±–µ—Ä–µ—Ç–µ <b>"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"</b>'
    )
    error: str = (
        '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî'
        '\n\n'
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è'
    )
    cancel: str = (
        '–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞. –û—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ.'
    )
    m: str = '–ú—É–∂—Å–∫–æ–π'
    f: str = '–ñ–µ–Ω—Å–∫–∏–π'


@dataclass
class TermCategoryEN(TermCategoryRU):
    pass


@dataclass
class ButtonCategoryRU:
    cancel: str = '–û—Ç–º–µ–Ω–∞'
    miss_state: str = '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —à–∞–≥'
    general: str = '–ù–∞ –≥–ª–∞–≤–Ω—É—é'
    back: str = '‚¨ÖÔ∏è'
    forward: str = '‚û°Ô∏è'

    async def get_dict_with(self, *keys) -> dict:
        return {key: getattr(self, key) for key in keys}


@dataclass
class ButtonCategoryEN(ButtonCategoryRU):
    pass


@dataclass
class Lang:
    terms: TermCategoryRU | TermCategoryEN
    buttons: ButtonCategoryRU | ButtonCategoryEN
    menu: dict
    menu_start: dict


@dataclass
class LangList:
    ru: Lang
    en: Lang


ru_lang = Lang(
    terms=TermCategoryRU(),
    buttons=ButtonCategoryRU(),
    menu=menu_ru,
    menu_start=menu_start_ru
)
en_lang = Lang(
    terms=TermCategoryEN(),
    buttons=ButtonCategoryEN(),
    menu=menu_en,
    menu_start=menu_start_en
)

terminology = LangList(ru=ru_lang, en=en_lang)
