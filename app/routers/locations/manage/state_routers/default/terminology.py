from dataclasses import dataclass


@dataclass
class TermCategoryRU:
    done: str = (
        '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –¥–æ –Ω–∞—á–∞–ª–∞ —Ç–∞–π–º—Å–ª–æ—Ç–∞, '
        '–∫–æ–≥–¥–∞ —É–∂–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å —Å –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω–æ–π '
        '–∑–∞–ø–∏—Å–∏ –≤ –∞–±–æ–Ω–µ–º–µ–Ω—Ç'
        '\n\n'
        '–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–∏–º —á–∏—Å–ª–æ–º ‚úèÔ∏è'
    )
    error: str = (
        '–ù—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –Ω–µ —Ñ–∞–π–ª –∏–ª–∏ —Ç–µ–∫—Å—Ç ‚ùóÔ∏è\n'
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ üñº'
        '\n\n'
        '–í–∞–º –∏ –í–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –±—É–¥–µ—Ç –ø—Ä–∏—è—Ç–Ω–æ –≤–∏–¥–µ—Ç—å –ª–æ–≥–æ—Ç–∏–ø –∏–ª–∏ '
        '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤—Å–µ–π –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã ‚ú®‚ú®‚ú®'
    )
    manage: str = (
        '<b>{name}</b>'
        '\n\n'
        '{description}'
        '\n\n'
        'Email: {email}'
        '\n\n'
        '–ß–∞—Å–æ–≤ –æ—Ç–º–µ–Ω—ã: {max_hour_cancel}'
    )


@dataclass
class TermCategoryEN(TermCategoryRU):
    pass


@dataclass
class ButtonCategoryRU:
    locations: str = '–õ–æ–∫–∞—Ü–∏–∏ üè†'
    trainings: str = '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ ‚õ∑'
    instructors: str = '–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã üôã‚Äç‚ôÄÔ∏è'
    abonnements: str = '–ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã üìú'
    timeslots: str = '–¢–∞–π–º—Å–ª–æ—Ç—ã üïî'
    update_company: str = '–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏'


@dataclass
class ButtonCategoryEN(ButtonCategoryRU):
    pass


@dataclass
class Lang:
    terms: TermCategoryRU | TermCategoryEN
    buttons: ButtonCategoryRU | ButtonCategoryEN


@dataclass
class LangList:
    ru: Lang
    en: Lang


ru_lang = Lang(terms=TermCategoryRU(), buttons=ButtonCategoryRU())
en_lang = Lang(terms=TermCategoryEN(), buttons=ButtonCategoryEN())

terminology = LangList(ru=ru_lang, en=en_lang)
